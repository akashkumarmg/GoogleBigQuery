name: gitleaks-docker

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write  
      issues: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run gitleaks-docker
        run: |
          docker pull zricethezav/gitleaks:latest
          docker run \
            -v ${{ github.workspace }}:/repo \
            -e GITLEAKS_CONFIG=/repo/.github/gitleaks.toml \
            -e GITLEAKS_EXIT_CODE=0 \
            zricethezav/gitleaks:latest \
            detect --source=/repo --verbose --config=$GITLEAKS_CONFIG -f=json > gitleaks-results.json
          echo "Gitleaks scan completed. Results saved to gitleaks-results.json"

      - name: Display Gitleaks JSON Output
        run: |
          echo "Displaying Gitleaks results..."
          cat gitleaks-results.json

      - name: Format and comment findings on PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          FINDINGS_JSON=$(cat gitleaks-results.json)
          COUNT=$(echo "$FINDINGS_JSON" | jq 'length')
          SHA="${{ github.event.pull_request.head.sha }}"
          REPO="${{ github.repository }}"
          PR_NUMBER="${{ github.event.pull_request.number }}"
          MAX=10

          if [ "$COUNT" -gt 0 ]; then
            COMMENT="**üîê Gitleaks Findings: $COUNT issue(s) detected**\n\n"
            i=0

            while [ "$i" -lt "$COUNT" ] && [ "$i" -lt "$MAX" ]; do
              ITEM=$(echo "$FINDINGS_JSON" | jq ".[$i]")
              RULE=$(echo "$ITEM" | jq -r '.RuleID')
              DESC=$(echo "$ITEM" | jq -r '.Description')
              FILE=$(echo "$ITEM" | jq -r '.File')
              LINE=$(echo "$ITEM" | jq -r '.Line')
              SECRET=$(echo "$ITEM" | jq -r '.Secret' | sed 's/./*/g')  # Mask secret
              LINK="https://github.com/$REPO/blob/$SHA/$FILE#L$LINE"

              COMMENT+="üî∏ **Rule**: \`$RULE\`\n"
              COMMENT+="üìÑ **File**: \`$FILE:$LINE\`\n"
              COMMENT+="üìù **Description**: $DESC\n"
              COMMENT+="üîë **Secret**: \`$SECRET\`\n"
              COMMENT+="üîó **Path**: [$FILE:$LINE]($LINK)\n\n"
              i=$((i + 1))
            done

            if [ "$COUNT" -gt "$MAX" ]; then
              COMMENT+="...and more. Only showing first $MAX findings.\n"
            fi
          else
            COMMENT="‚úÖ **Gitleaks Findings:** No secrets detected. Safe to proceed!"
          fi

          # Escape newlines for GitHub API
          COMMENT=$(echo "$COMMENT" | sed ':a;N;$!ba;s/\n/\\n/g')

          curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "{\"body\":\"$COMMENT\"}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
