name: Semgrep-new

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read  # Adjusted to read permission for PRs
      issues: write        # Write permission to add comments to PRs
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Semgrep and jq
        run: |
          python3 -m venv .venv
          .venv/bin/pip install semgrep jq

      - name: Run Semgrep
        run: |
          source .venv/bin/activate
          semgrep --config auto --json-output=results.json --no-error
          jq .results results.json > pretty-results.json

      - name: Display Raw Semgrep JSON Output
        run: |
          echo "Displaying raw Semgrep results..."
          cat pretty-results.json

      - name: Add comment on PR if findings are found
        uses: actions/github-script@v6
        with:
          script: |
            // Ensure the context has a pull_request
            if (context.payload.pull_request) {
              const prNumber = context.payload.pull_request.number;
              const fs = require('fs');
              
              // Read the pretty JSON results
              const results = JSON.parse(fs.readFileSync('pretty-results.json', 'utf8'));

              // Ensure results is an array before processing
              if (Array.isArray(results)) {
                // Filter high-severity findings (ERROR and WARNING)
                const highFindings = results.filter(issue => issue.severity === 'ERROR' || issue.severity === 'WARNING');

                // Log the number of high-severity findings
                console.log(`Found ${highFindings.length} high-severity findings.`);

                // Prepare the PR comment body
                let commentBody = '';
                if (highFindings.length > 0) {
                  // List the findings (file path and message)
                  commentBody = `**Semgrep Findings:** Vulnerabilities are found in the following files:\n\n`;
                  highFindings.forEach(issue => {
                    commentBody += `- ${issue.path}: ${issue.extra.message}\n`;
                  });
                  commentBody += `\nPlease address them before merging.`;
                } else {
                  // If no high-severity issues found
                  commentBody = "No issues found, good to merge.";
                }

                // Add comment to the PR
                await github.rest.issues.createComment({
                  ...context.repo,
                  issue_number: prNumber,
                  body: commentBody
                });
              } else {
                console.log("No results found or results are not an array.");
              }
            } else {
              console.log("This workflow wasn't triggered by a pull request, so no comment will be added.");
            }
